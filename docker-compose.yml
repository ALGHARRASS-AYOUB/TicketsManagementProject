version: '3.8'
services:
  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      - POSTGRES_USER=hahn
      - POSTGRES_PASSWORD=hahn
      - POSTGRES_DB=ticketsdb
      - POSTGRES_HOST_AUTH_METHOD=md5
    ports:
      - "5432:5432"
    volumes:
       - pgdata:/var/lib/postgresql/data
       - ./initializer/init.sql:/docker-entrypoint-initdb.d/init.sql
       - ./initializer/pg_hba.conf:/etc/postgresql/pg_hba.conf
       - ./initializer/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - app-network

  backend:
    build:
      context: ./BackendApplication/TicketsManagement
      dockerfile: Dockerfile
    container_name: backend_service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=ticketsdb;Username=hahn;Password=hahn
    depends_on:
      - db
    ports:
      - "5059:8080"
    networks:
      - app-network
    command: >
      bash -c "dotnet TicketsManagement.dll"

  frontend:
    build:
      context: ./FrontendApplication/ticket-management
      dockerfile: Dockerfile
    container_name: frontend_service
    environment:
      - REACT_APP_API_URL=http://localhost:5059/
    ports:
      - "80:80"
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
